// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArcadeDriveWithInputs.h"
#include "Commands/ArcadeDriveWithJoysticks.h"
#include "Commands/Auton0DoNothing.h"
#include "Commands/Auton1MobilityBonus.h"
#include "Commands/DriveForDistance.h"
#include "Commands/DriveToAngle.h"
#include "Commands/MoveArmIn.h"
#include "Commands/MoveArmOut.h"
#include "Commands/ReleaseLatch.h"
#include "Commands/RunFakeCompressor.h"
#include "Commands/RunRollerBar.h"
#include "Commands/RunRollerBarBackwards.h"
#include "Commands/ShiftToHighGear.h"
#include "Commands/Shoot.h"
#include "Commands/UnwindWinch.h"
#include "Commands/WinchLauncherDown.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	gamepad = new Joystick(3);
	
	shootAndReload = new JoystickButton(gamepad, 8);
	shootAndReload->WhenPressed(new Shoot());
	intakeWheelsBackwards = new JoystickButton(gamepad, 5);
	intakeWheelsBackwards->WhileHeld(new RunRollerBarBackwards());
	intakeWheelsForward = new JoystickButton(gamepad, 6);
	intakeWheelsForward->WhileHeld(new RunRollerBar());
	rollerBarIn = new JoystickButton(gamepad, 1);
	rollerBarIn->WhenReleased(new MoveArmIn());
	rollerBarOut = new JoystickButton(gamepad, 1);
	rollerBarOut->WhenPressed(new MoveArmOut());
	joystickRight = new Joystick(2);
	
	commandShiftButton = new JoystickButton(joystickRight, 1);
	commandShiftButton->WhileHeld(new ShiftToHighGear());
	joystickLeft = new Joystick(1);
	
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Auton 0 Do Nothing", new Auton0DoNothing());
	SmartDashboard::PutData("Auton 1 Mobility Bonus", new Auton1MobilityBonus());
	SmartDashboard::PutData("ArcadeDriveWithJoysticks", new ArcadeDriveWithJoysticks());
	SmartDashboard::PutData("ShiftToHighGear", new ShiftToHighGear());
	SmartDashboard::PutData("MoveArmOut", new MoveArmOut());
	SmartDashboard::PutData("MoveArmIn", new MoveArmIn());
	SmartDashboard::PutData("RunRollerBar", new RunRollerBar());
	SmartDashboard::PutData("RunRollerBarBackwards", new RunRollerBarBackwards());
	SmartDashboard::PutData("WinchLauncherDown", new WinchLauncherDown());
	SmartDashboard::PutData("UnwindWinch", new UnwindWinch());
	SmartDashboard::PutData("ReleaseLatch", new ReleaseLatch());
	SmartDashboard::PutData("Shoot", new Shoot());
	SmartDashboard::PutData("RunFakeCompressor", new RunFakeCompressor());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	SmartDashboard::PutNumber("Shooter Down", (double)Robot::launcher->latchSwitch->Get());
	SmartDashboard::PutNumber("Shooter Up", (double)Robot::launcher->winchUpSwitch->Get());
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getGamepad() {
	return gamepad;
}
Joystick* OI::getJoystickRight() {
	return joystickRight;
}
Joystick* OI::getJoystickLeft() {
	return joystickLeft;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
