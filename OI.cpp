// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArcadeDriveWithJoysticks.h"
#include "Commands/ArcadeDriveWithParameters.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/LaunchBall.h"
#include "Commands/ShiftToHighGear.h"
#include "Commands/StopDriving.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	gamepad = new Joystick(3);
	
	button1 = new JoystickButton(gamepad, 6);
	button1->WhileHeld(new LaunchBall());
	rightStick = new Joystick(2);
	
	leftStick = new Joystick(1);
	
	shiftButton = new JoystickButton(leftStick, 1);
	shiftButton->WhileHeld(new ShiftToHighGear());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("Launch Ball", new LaunchBall());
	SmartDashboard::PutData("Stop Driving", new StopDriving());
	SmartDashboard::PutData("Shift To High Gear", new ShiftToHighGear());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getGamepad() {
	return gamepad;
}
Joystick* OI::getRightStick() {
	return rightStick;
}
Joystick* OI::getLeftStick() {
	return leftStick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
float getDriveSpeed() {
	OI::leftStick->GetY();
}
float getSteeringSpeed() {
	OI::rightStick->GetX();
}
// useless line
